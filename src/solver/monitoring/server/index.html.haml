!!!5
%html{ lang: 'en' }
  %head
    %meta{ charset: 'utf-8' }

    %link{ href: '//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css', rel: 'stylesheet' }
    %link{ href: '/assets/index.css', rel: 'stylesheet' }

    %script{ src: '//code.jquery.com/jquery-2.1.0.min.js' }
    %script{ src: '//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js' }
    %script{ src: '/assets/bootstrap-tab-history.js' }

    %title Monitor
  %body
    %main{ role: 'main' }
      .container
        %section
          %h2 Workers

          %ul.nav.nav-tabs
            - each workerJournal, idx in workerJournals
              %li{ class: (idx == 0 ? 'active' : null) }
                %a{ href: '#worker-' + workerJournal.worker.pid, 'data-toggle': 'tab', 'data-tab-history': 'true', 'data-tab-history-changer': 'push', 'data-tab-history-update-url': 'true' } #{ workerJournal.worker.pid }
          .tab-content
            - each workerJournal, idx in workerJournals
              .tab-pane{ class: (idx == 0 ? 'active' : null), id: 'worker-' + workerJournal.worker.pid }
                %h3 Worker #{workerJournal.worker.pid}

                %section
                  %h4 Last Message
                  %dl.dl-horizontal
                    %dt Type
                    %dd= workerJournal.lastMessage.type
                    %dt Action
                    %dd= workerJournal.lastMessage.action
                    %dt Time
                    %dd
                      %time{ datatime: workerJournal.lastMessage.time.toISOString() }= strftime('%Y-%m-%d %H:%M:%S', workerJournal.lastMessage.time)

                - each solverStageJournalPair in [[workerJournal.annealingJournal, 'Annealing'], [workerJournal.exhaustiveJournal, 'Exhaustive']]
                  - var solverStageJournal = solverStageJournalPair[0];
                  - var solverStageName = solverStageJournalPair[1];

                  %section
                    %h4= solverStageName

                    - if(!solverStageJournal.isBlank())
                      - var solverStageStatistics = solverStageJournal.scoringDistribution.calculateStatistics();

                      %dl.dl-horizontal
                        %dt Top Score
                        %dd= solverStageJournal.scoringDistribution.max
                        %dt Top Score At
                        %dd
                          %time{ datatime: solverStageJournal.topScoreTime.toISOString() }= strftime('%Y-%m-%d %H:%M:%S', solverStageJournal.topScoreTime)
                        %dt Count
                        %dd= solverStageStatistics.total
                        %dt Total Time (s)
                        %dd= solverStageJournal.runTime / 1000
                        %dt Average Time (s)
                        %dd= solverStageJournal.runTime / (1000 * solverStageStatistics.total)
                        %dt Min Score
                        %dd= solverStageStatistics.min
                        %dt Max Score
                        %dd= solverStageStatistics.max
                        %dt Average Score
                        %dd= solverStageStatistics.average
